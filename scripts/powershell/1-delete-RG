# This script was designed to run on Azure Cloud Shell for a single subscription.
# If running from another platform, ensure to add steps for authentication.
# Steps to loop through multiple subscriptions can be added if required.

# Log file path: Choose one depending on the OS (Windows/Linux).
# $logFile = "C:\path\to\logfile.txt"  # For Windows
$logFile = "log1.txt"  # For Linux/Cloud Shell (relative path)

# Write header to log file
Add-Content -Path $logFile -Value "$(Get-Date) - Script started."

# Connect to Azure (uncomment if running outside Cloud Shell)
# Connect-AzAccount

# Get list of all Azure Resource Groups
$resourceGroups = Get-AzResourceGroup

# Log the number of resource groups retrieved
Add-Content -Path $logFile -Value "$(Get-Date) - Retrieved $($resourceGroups.Count) Resource Groups."

# Log the list of all Resource Groups found
Add-Content -Path $logFile -Value "$(Get-Date) - List of Resource Groups found:"
$resourceGroups | ForEach-Object {
    Add-Content -Path $logFile -Value "$(Get-Date) - Resource Group: $($_.ResourceGroupName)"
}

# Loop through each Resource Group to delete and provide progress feedback
$totalRGs = $resourceGroups.Count
$counter = 1

foreach ($rg in $resourceGroups) {
    $rgName = $rg.ResourceGroupName
    
    # Show progress in UI
    Write-Host "Deleting Resource Group ${counter} of ${totalRGs}: ${rgName}..."

    # Log the deletion attempt
    Add-Content -Path $logFile -Value "$(Get-Date) - Attempting to delete Resource Group: $rgName"
    
    Try {
        # Try to delete the resource group
        Remove-AzResourceGroup -Name $rgName -Force -ErrorAction Stop

        # Log the success
        Add-Content -Path $logFile -Value "$(Get-Date) - Successfully deleted Resource Group: $rgName"
    }
    Catch {
        # Log failure if an error occurs during deletion
        Add-Content -Path $logFile -Value "$(Get-Date) - FAILED to delete Resource Group: $rgName. Error: $($_.Exception.Message)"
    }

    # Increment the counter
    $counter++
}

# Script ends here, log time of completion
Add-Content -Path $logFile -Value "$(Get-Date) - Script completed."

# After deletions, get the remaining Resource Groups
$remainingResourceGroups = Get-AzResourceGroup

# Display remaining Resource Groups on the screen
Write-Output "Remaining Resource Groups after deletion attempt:"
$remainingResourceGroups | ForEach-Object {
    Write-Output "Resource Group: $($_.ResourceGroupName)"
}

# Log the remaining Resource Groups
Add-Content -Path $logFile -Value "$(Get-Date) - Remaining Resource Groups after deletion attempt:"
$remainingResourceGroups | ForEach-Object {
    Add-Content -Path $logFile -Value "$(Get-Date) - Resource Group: $($_.ResourceGroupName)"
}
